[base_command]
name = "openapi"
short = """Generate a Ballerina service or a client from an
       OpenAPI contract and vice versa."""

[help]
[help.base]
examples = """
    Generate a Ballerina mock service using a `hello.yaml` OpenAPI contract.
        $ bal openapi -i hello.yaml --mode service

    Generate a Ballerina client using a `hello.yaml` OpenAPI contract.
        $ bal openapi -i hello.yaml --mode client

    Generate a Ballerina client including boiler-plate test cases for all the client remote functions based on the `hello.yaml` OpenAPI contract.
        $ bal openapi -i hello.yaml --mode client --with-tests

    Generate both the Ballerina client and service files using a `hello.yaml` OpenAPI contract and (optionally) write the output to the given directory.
        $ bal openapi --input hello.yaml -o ./output_path

    Generate services for the tags given in the `hello.yaml` OpenAPI contract.
        $ bal openapi -i hello.yaml --mode service --tags tag_ID

    Generate services for the operations given in the `hello.yaml` OpenAPI contract.
        $ bal openapi -i hello.yaml --mode service --operations operation_ID

    Generate a Ballerina service without data binding using a `hello.yaml` OpenAPI contract.
        $ bal openapi -i hello.yaml --mode service --without-data-binding
        $ bal openapi -i hello.yaml --without-data-binding

    Generate all the record fields that are not specifically mentioned as `nullable:false` in the OpenAPI schema property as nullable.
        $ bal openapi -i hello.yaml --nullable

    Generate both the Ballerina client and service files including the given license or copyright header.
        $ bal openapi -i hello.yaml --license license.txt

    Generate a client with resource methods with respect to the `hello.yaml` OpenAPI contract.
        $ bal openapi -i hello.yaml --client-methods resource
        $ bal openapi -i hello.yaml --mode client --client-methods resource

    Export an OpenAPI definition for the `/hello` service of the `hello_service.bal` file.
        $ bal openapi -i hello_service.bal --service-name /hello

    Generate an OpenAPI specification in the JSON format.
        $ bal openapi -i hello_service.bal --json
    """
long = """
    Generate a Ballerina source (either a mock service or a client stub) from
    the given OpenAPI definition file or export an OpenAPI definition from a
    Ballerina service.

    The generated Ballerina sources will be written into the provided output
    location."""
synopsis = """
    bal openapi [-i | --input] <openapi-contract-file-path>
                [-o | --output] <output-location>
    bal openapi [-i | --input] <ballerina-service-file-path>
                [-o | --output] <output-location>
    bal openapi [-i | --input] <openapi-contract-file-path>
                [--mode <mode-type>] [--tags <tag-names>]
                [--operations <operation-names>] [-n | --nullable]
                [--license] <license-file-path> [--with-tests]
                [--client-methods] <resource|remote> [--without-data-binding]
    bal openapi [-i | --input] <ballerina-service-file-path> [--json]
                [-s | --service] <current-service-name>
    """

[[base_command.flag]]
default_val = ""
name = "input"
param = "openapi-contract-file-path | ballerina-service-file-path"
shorthand = "i"
usage = """This is a mandatory input. The given OpenAPI contract input will
            generate a Ballerina service and the client stub files for the given
            OpenAPI contract. This generated service can be used as a code
            template to start the service implementation. Generated sources
            contain a service definition, schema definition, and a copy of the
            OpenAPI contract, which is used for the template generation.
            The generated client stub is used to start the client application
            implementation to call the service defined in the OpenAPI file.
            The given Ballerina service file input will generate the relevant
            OpenAPI specification for the service file."""

[[base_command.flag]]
default_val = ""
name = "output"
param = "output"
shorthand = "o"
usage = """Location of the generated Ballerina source code. If this path is not
            specified, the output will be written to the same directory from
            which the command is run."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = ""
name = "mode"
param = "mode-type"
usage = """Mode type can be 'service' or 'client'. The Ballerina service and
            client will be generated according to the specified mode."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = false
name = "nullable"
shorthand = "n"
usage = """JSON schema properties that are not marked as `nullable:true` may
            return as null in some responses. It will result in a JSON schema to
            Ballerina record data binding error. This is a safe option to
            generate all data types in the record with Ballerina nil support."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = ""
name = "license"
param = "license-file-path"
usage = """Optional. The `.bal` files will generate with the given copyright or
            license header."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = ""
name = "service"
param = "current-service-name"
shorthand = "s"
usage = """This service name is used to identify the service that needs to
            documented as OpenApi specification. This option is used with the
            command of Ballerina to OpenAPI specification generation."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = false
name = "json"
usage = """Generate the Ballerina service to OpenAPI output in JSON.
            The default is YAML."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = ""
name = "tags"
param = "tag-names"
usage = """These tags are used to filter the operations tags that are needed to
            generate services. This option is used with the OpenAPI to Ballerina
            file generation command."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = ""
name = "operations"
param = "operation-names"
usage = "List of operations to generate the Ballerina service or client."
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = false
name = "with-tests"
usage = """Work with the client generation command and generate a test
            boiler-plate for all the remote functions of the generated client."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = false
name = "without-data-binding"
usage = """This option can be used in the service generation to generate a low-level service
            without any data-binding logic."""
short = "add a meaningfull short message about flag"

[[base_command.flag]]
default_val = ""
name = "client-methods"
param = "resource|remote"
usage = "This option can be used in client generation to select the client method type, which can be `resource` or `remote`."
short = "add a meaningfull short message about flag"
