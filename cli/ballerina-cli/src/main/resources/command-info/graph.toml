[base_command]
name = "graph"
short = "Print the dependency graph"

[help]
[help.base]
examples = """Print the dependency graph of the current package.
           $ bal graph

       Print the dependency graph of a single '.bal' file.
           $ bal graph app.bal

       Print the dependency graph of the 'app' package from a different
       directory.
           $ bal graph <app-package-path>"""
long = """ Resolve the dependencies of the current package and print the
       dependency graph in the console.

       This produces the textual representation of the dependency graph
       using the DOT graph language."""
synopsis = "bal graph [OPTIONS] [<package>|<source-file>]"

[[base_command.flag]]
default_val = false
name = "dump-raw-graphs"
short = "add a meaningfull short message about flag"
usage = """Print all intermediate graphs created in the dependency resolution process.This produces the textual representation of the dependency graph using the DOT graph language."""

[[base_command.flag]]
default_val = false
name = "offline"
short = "add a meaningfull short message about flag"
usage = """Proceed without accessing the network. Attempt to proceed with the previously downloaded dependencies in local caches will fail otherwise."""

[[base_command.flag]]
default_val = false
name = "sticky"
short = "add a meaningfull short message about flag"
usage = """Attempt to stick to the dependency versions available in the 'Dependencies.toml' file. If the file doesn't exist, this option is ignored."""

[[base_command.flag]]
default_val = ""
name = "target-dir"
param = "path"
short = "add a meaningfull short message about flag"
usage = "Target directory path"
